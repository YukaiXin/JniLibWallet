/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include "com_iyich_wallet_lib_jni_FastModeJNI.h"
#include "fastmode.c"
#include "package_type.h"

#include <android/log.h>
#define LOG_TAG "System.out"
#define LOGD(...) __android_log_print(ANDROID_LOG_DEBUG, LOG_TAG, __VA_ARGS__)
#define LOGI(...) __android_log_print(ANDROID_LOG_INFO, LOG_TAG, __VA_ARGS__)

/* Header for class com_iyich_wallet_lib_jni_FastModeJNI */
JNIEnv *_env;
jobject _obj;

bool receiveBuff(int pos,unsigned char *data, int len){
    jbyteArray dataArray =  _env -> NewByteArray(len);
    jbyte * jbyteP = _env->GetByteArrayElements(dataArray, 0);
    memcpy(jbyteP, data, len);

    jclass fastClass = _env ->GetObjectClass(_obj);
    jmethodID jmethodID1 = _env->GetMethodID(fastClass, "RecieveBuff", "([BI)V");
    _env->CallVoidMethod(_obj, jmethodID1, dataArray, len);

    _env ->ReleaseByteArrayElements(dataArray, jbyteP,  JNI_ABORT);
    return false;
}

bool sendBuff(unsigned char*data, int len){

    jbyteArray dataArray =  _env -> NewByteArray(len);
    jbyte * jbyteP = _env->GetByteArrayElements(dataArray, 0);
    memcpy(jbyteP, data, len);

    jclass fastClass = _env ->GetObjectClass(_obj);
    jmethodID jmethodID1 = _env->GetMethodID(fastClass, "SendBuff", "([B)V");
    _env->CallVoidMethod(_obj, jmethodID1, dataArray);

    _env ->ReleaseByteArrayElements(dataArray, jbyteP,  JNI_ABORT);
    return false;
}

unsigned char *byteArrayToByte(JNIEnv* env, jbyteArray byteArray) {
    jbyte *pjb =  env->GetByteArrayElements(byteArray, 0);
    jsize jlen = env ->GetArrayLength(byteArray);
    int len =  jlen;
    unsigned char *byBuf = NULL;

    if (len > 0) {
        byBuf =  (unsigned char *)malloc(len + 1);
        memcpy(byBuf, pjb, len);
    } else {
        byBuf = (unsigned char*) malloc(1);
    }
    env->ReleaseByteArrayElements(byteArray, pjb, 0);
    return byBuf;
}

/*
 * Class:     com_iyich_wallet_lib_jni_FastModeJNI
 * Method:    sendData
 * Signature: ([BI)Z
 */
JNIEXPORT jboolean JNICALL Java_com_iyich_wallet_lib_jni_FastModeJNI_sendData
(JNIEnv *env, jobject jobj, jbyteArray data, jint len){
    LOGI(" ......From C.....");
    _env = env;
    _obj = jobj;
    jbyte* jbyte1 = env ->GetByteArrayElements(data, 0);
    unsigned char* buf=byteArrayToByte(env, data);

    LOGI(" ......From C.....");
    return onSendBlock(buf, len, sendBuff);
}
/*
 * Class:     com_iyich_wallet_lib_jni_FastModeJNI
 * Method:    onReceive
 * Signature: ([BI)Z
 */
JNIEXPORT jboolean JNICALL Java_com_iyich_wallet_lib_jni_FastModeJNI_onReceive
(JNIEnv *env, jobject jobj, jbyteArray data, jint len){

    _env = env;
    _obj = jobj;


    jbyte* jbyte1 = env ->GetByteArrayElements(data, 0);
    unsigned char* buf=byteArrayToByte(env, data);
    return onMRecieve(byteArrayToByte(env, data), len, sendBuff, receiveBuff);
}


